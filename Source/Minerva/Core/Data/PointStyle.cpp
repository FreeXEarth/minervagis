
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2008, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "Minerva/Core/Data/PointStyle.h"

#include "Usul/Factory/RegisterCreator.h"

using namespace Minerva::Core::Data;

USUL_FACTORY_REGISTER_CREATOR ( PointStyle );

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor
//
///////////////////////////////////////////////////////////////////////////////

PointStyle::PointStyle() : BaseClass(),
  _type ( NONE ),
  _size ( 5.0 )
{
  this->_addMember ( "size", _size );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor
//
///////////////////////////////////////////////////////////////////////////////

PointStyle::~PointStyle()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the size.
//
///////////////////////////////////////////////////////////////////////////////

void PointStyle::size ( float size )
{
  Guard guard ( this );
  _size = size;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the size.
//
///////////////////////////////////////////////////////////////////////////////

float PointStyle::size() const
{
  Guard guard ( this );
  return _size;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the primitiveId.
//
///////////////////////////////////////////////////////////////////////////////

PointStyle::PrimitiveType PointStyle::primitiveId() const
{
  Guard guard ( this );
  return _type;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the primitiveId.
//
///////////////////////////////////////////////////////////////////////////////

void PointStyle::primitiveId ( PrimitiveType type )
{
  Guard guard ( this );
  _type = type;
}
